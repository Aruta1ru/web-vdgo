# Generated by Django 3.0.10 on 2021-11-30 13:42

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bypass',
            fields=[
                ('id', models.IntegerField(db_column='id', primary_key=True, serialize=False, verbose_name='ID ВДГО')),
                ('dog_type', models.SmallIntegerField(choices=[(0, 'отсутствует'), (1, 'частное лицо'), (2, 'юридическое лицо'), (3, 'СБК')], db_column='type_dog', verbose_name='Тип договора')),
                ('exec_status', models.SmallIntegerField(choices=[(0, 'в работе'), (1, 'выполнено'), (2, 'не выполнено')], db_column='web_exec', verbose_name='Статус выполнения')),
                ('date_action', models.DateTimeField(db_column='date_action', verbose_name='Дата назначения')),
                ('is_fixed', models.BooleanField(db_column='fixed', default=False, verbose_name='Проведено?')),
            ],
            options={
                'verbose_name': 'ВДГО',
                'verbose_name_plural': 'ВДГО',
                'db_table': 'web_vdgo_bypass',
                'ordering': ['-date_action', 'object'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.IntegerField(db_column='id_klient', primary_key=True, serialize=False, verbose_name='ID клиента')),
                ('name', models.CharField(db_column='FIO', max_length=128, verbose_name='ФИО клиента')),
                ('phone', models.CharField(db_column='telefon', max_length=32, verbose_name='Номер телефона')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'db_table': 'web_vdgo_client',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.IntegerField(db_column='id_st', primary_key=True, serialize=False, verbose_name='ID оборудования')),
                ('quantity', models.FloatField(db_column='kol_oborud', verbose_name='Количество')),
                ('part', models.FloatField(db_column='dol_ob', verbose_name='Доля')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудования',
                'db_table': 'to_ch_story',
                'ordering': ['object', 'type'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentInfo',
            fields=[
                ('id', models.IntegerField(db_column='id_param', primary_key=True, serialize=False, verbose_name='ID')),
                ('eyeliner_type', models.BooleanField(verbose_name='Вид подводки')),
                ('factory_num', models.CharField(max_length=32, verbose_name='Заводской №')),
                ('burners_num', models.SmallIntegerField(verbose_name='Количество конфорок')),
                ('power', models.FloatField(verbose_name='Мощность')),
                ('lifetime', models.SmallIntegerField(verbose_name='Срок эксплуатации')),
                ('extra_info', models.TextField(verbose_name='Дополнительная информация')),
                ('install_date', models.DateTimeField(verbose_name='Дата установки')),
                ('shutdown_date', models.DateTimeField(verbose_name='Дата отключения')),
                ('camera_type', models.SmallIntegerField(choices=[(0, 'не указано'), (1, 'открытая'), (2, 'закрытая')], verbose_name='Тип камеры')),
                ('install_location', models.SmallIntegerField(choices=[(0, 'не указано'), (1, 'напольный'), (2, 'настенный')], verbose_name='Место установки')),
                ('meter_value', models.IntegerField(verbose_name='Показание счетчика')),
                ('reading_date', models.DateTimeField(verbose_name='Дата показаний')),
                ('valve_presence', models.BooleanField(default=False, verbose_name='Наличие клапана')),
                ('controlled_env', models.SmallIntegerField(choices=[(0, 'не указано'), (1, 'CH4'), (2, 'CO2'), (3, 'CH4+CO2')], verbose_name='Контролируемая среда')),
            ],
            options={
                'verbose_name': 'Информация об оборудовании',
                'verbose_name_plural': 'Информация об оборудовании',
                'db_table': 'web_vdgo_equipment_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentInfoPrev',
            fields=[
                ('id', models.IntegerField(db_column='id_param', primary_key=True, serialize=False, verbose_name='ID')),
                ('prev_manufacturer', models.CharField(db_column='name_izg', max_length=80, verbose_name='Изготовитель')),
                ('prev_model', models.CharField(db_column='model', max_length=50, verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Предыдущее значение оборудования',
                'verbose_name_plural': 'Предыдущее значения оборудований',
                'db_table': 'web_vdgo_ob_prev',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentModel',
            fields=[
                ('id', models.IntegerField(db_column='id_model', primary_key=True, serialize=False, verbose_name='ID модели')),
                ('name', models.CharField(db_column='name_model', max_length=64, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Модель оборудования',
                'verbose_name_plural': 'Модели оборудования',
                'db_table': 'vdg_model',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('id', models.IntegerField(db_column='id_ob', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name_ob', max_length=128, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип оборудования',
                'verbose_name_plural': 'Типы оборудования',
                'db_table': 'to_ch_ob',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FileInfo',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False, verbose_name='ID файла')),
                ('filename', models.CharField(blank=True, db_column='name', max_length=32, verbose_name='Название файла')),
                ('file_num', models.SmallIntegerField(db_column='num', verbose_name='Порядковый №')),
                ('file_category', models.SmallIntegerField(choices=[(0, 'фотография'), (1, 'ИТД')], db_column='file_type', verbose_name='Категория файла')),
                ('file_size', models.BigIntegerField(blank=True, db_column='size', verbose_name='Размер файла')),
                ('bypass_date', models.DateField(db_column='bypass_date', null=True, verbose_name='Дата ВДГО')),
                ('is_deleted', models.BooleanField(db_column='deleted', default=False, verbose_name='Файл удален?')),
                ('date_add', models.DateTimeField(auto_now_add=True, db_column='date_add')),
            ],
            options={
                'verbose_name': 'Файл объекта',
                'verbose_name_plural': 'Файлы объекта',
                'db_table': 'web_vdgo_files',
                'ordering': ['file_category', 'filename'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.SmallIntegerField(db_column='id_izg', primary_key=True, serialize=False, verbose_name='ID изготовителя')),
                ('name', models.CharField(db_column='name_izg', max_length=64, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Изготовитель',
                'verbose_name_plural': 'Изготовители',
                'db_table': 'vdg_izg',
                'ordering': ['name'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UndoneReason',
            fields=[
                ('id', models.IntegerField(db_column='id', primary_key=True, serialize=False, verbose_name='ID причины')),
                ('name_full', models.CharField(db_column='name_full', max_length=64, verbose_name='Полное название')),
                ('name_short', models.CharField(db_column='name_short', max_length=32, verbose_name='Краткое название')),
            ],
            options={
                'verbose_name': 'Причина невыполнения',
                'verbose_name_plural': 'Причины невыполнения',
                'db_table': 'web_vdgo_undone_spr',
                'ordering': ['id'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BypassBuffer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_bypass', models.IntegerField()),
                ('id_obj', models.IntegerField()),
                ('id_exec', models.IntegerField()),
                ('date_action', models.DateTimeField()),
                ('exec_vdgo', models.SmallIntegerField()),
                ('undone_reason', models.SmallIntegerField()),
                ('fixed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'web_vdgo_buff_bypass',
            },
        ),
        migrations.CreateModel(
            name='EquipmentInfoBuffer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_bypass', models.IntegerField()),
                ('id_st', models.IntegerField()),
                ('id_izg', models.IntegerField(default=0)),
                ('id_model', models.IntegerField(default=0)),
                ('podvod', models.BooleanField(default=0)),
                ('z_num', models.CharField(blank=True, max_length=32)),
                ('k_count', models.SmallIntegerField(default=0)),
                ('Pwr', models.FloatField(default=0)),
                ('Expl', models.SmallIntegerField(default=0)),
                ('dopinf', models.TextField(blank=True)),
                ('d_ust', models.DateTimeField(default='2050-01-01 00:00:00')),
                ('d_otkl', models.DateTimeField(default='2050-01-01 00:00:00')),
                ('tip_kam', models.SmallIntegerField(default=0)),
                ('m_ust', models.SmallIntegerField(default=0)),
                ('pokaz', models.IntegerField(default=0)),
                ('d_pokaz', models.DateTimeField(default='2050-01-01 00:00:00')),
                ('klapan', models.BooleanField(default=False)),
                ('kontr_sr', models.SmallIntegerField(default=0)),
                ('user_add', models.SmallIntegerField()),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('fixed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'web_vdgo_buff_ob',
            },
        ),
        migrations.CreateModel(
            name='VdgoObject',
            fields=[
                ('id', models.IntegerField(db_column='id_obj', primary_key=True, serialize=False, verbose_name='ID объекта')),
                ('address', models.CharField(db_column='addr', max_length=255, verbose_name='Адрес объекта')),
                ('phone_vdgo', models.CharField(db_column='phone_vdgo', max_length=32, null=True, verbose_name='Телефон (ВДГО)')),
                ('email_vdgo', models.CharField(db_column='email_vdgo', max_length=64, null=True, verbose_name='Электронная почта (ВДГО)')),
            ],
            options={
                'verbose_name': 'Объект ВДГО',
                'verbose_name_plural': 'Объекты ВДГО',
                'db_table': 'to_ch_addr_object',
                'ordering': ['address'],
                'managed': False,
            },
        ),
    ]
